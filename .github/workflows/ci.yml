name: CI

on:
  push: {}
  pull_request: {}

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Ruff lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install ruff
        run: python -m pip install -U pip ruff
      - name: Ruff check (hard fail)
        run: ruff check .
      - name: Ruff format check (hard fail)
        run: ruff format --check .

  typecheck:
    name: Mypy (advisory)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install mypy + package
        run: |
          python -m pip install -U pip
          pip install -e .
          pip install mypy types-setuptools
      - name: Run mypy (soft fail initially)
        run: mypy crapssim crapssim_api || true

  test:
    name: Pytest ${{ matrix.py }}
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    strategy:
      fail-fast: false
      matrix:
        py: ['3.9', '3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: ${{ matrix.py }} }
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ matrix.py }}-${{ hashFiles('**/pyproject.toml','**/setup.cfg','**/requirements*.txt') }}
      - name: Install test deps
        run: |
          python -m pip install -U pip wheel
          pip install -e .
          pip install pytest pytest-cov
      - name: Run tests (fast lane)
        run: |
          mkdir -p reports
          pytest -q \
            --cov=crapssim --cov=crapssim_api \
            --cov-report=xml:coverage.xml \
            --junitxml=reports/junit-${{ matrix.py }}.xml \
            -m "not stress"
      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: junit-and-coverage-${{ matrix.py }}
          path: |
            reports/junit-${{ matrix.py }}.xml
            coverage.xml
