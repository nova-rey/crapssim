name: CI

on:
  push:
    branches: [ main, api/**, feature/** ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install ruff
        run: pip install ruff
      - name: Ruff lint
        run: ruff check .
      - name: Ruff format check
        run: ruff format --check .

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install mypy + deps
        run: |
          python -m pip install -U pip
          pip install mypy types-setuptools
          pip install -e .
      - name: Mypy
        run: mypy crapssim crapssim_api || true  # start permissive; tighten later

  tests:
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: ${{ matrix.python-version }} }
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml','**/setup.cfg','**/requirements*.txt') }}
      - name: Install
        run: |
          python -m pip install -U pip wheel
          pip install -e .[testing]
          pip install pytest-cov
      - name: Run tests (fast set)
        run: |
          pytest -q --cov=crapssim --cov=crapssim_api --cov-report=xml \
                 --junitxml=reports/junit.xml -m "not stress"
      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: junit-${{ matrix.python-version }}
          path: |
            reports/junit.xml
            coverage.xml
            reports/vxp_*/**/*

  build:
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Build sdist/wheel
        run: |
          pip install build
          python -m build
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*
